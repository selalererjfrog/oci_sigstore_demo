name: Create a docker OCI image with sigstore evidence in it

on:
    push:
    workflow_dispatch:

env:
    JF_URL: ${{ vars.JF_URL }}
    JF_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
    JF_USER: admin

jobs:
    create-docker:
        name: Build and attest docker
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write 
            id-token: write
            attestations: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.JF_URL }}
                  username: ${{ env.JF_USER }}
                  password: ${{ env.JF_TOKEN }}
            - name: Get JFrog hostname
              id: jfrog_hostname
              run: |
                  echo "JF_URL='$JF_URL'"
                  JFROG_HOSTNAME="${JF_URL#https://}"
                  echo "JFROG_HOSTNAME='$JFROG_HOSTNAME'"
                  echo "JFROG_HOSTNAME=$JFROG_HOSTNAME" >> $GITHUB_OUTPUT
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ steps.jfrog_hostname.outputs.JFROG_HOSTNAME }}/docker-repo-local/silly-app
                  tags: |
                      type=raw,value=${{ github.run_number }}
                      type=sha,format=long
            - name: Build and push Docker image
              id: docker_step
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  provenance: true
            - name: Generate docker attestation
              uses: actions/attest-build-provenance@v2
              with:
                  subject-name: ${{ steps.jfrog_hostname.outputs.JFROG_HOSTNAME }}/docker-repo-local/silly-app
                  subject-digest: ${{ steps.docker_step.outputs.digest }}
